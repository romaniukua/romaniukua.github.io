{"version":3,"sources":["img/hotdog.svg","components/header/Header.js","components/banner/Banner.js","components/cards/Cards.js","components/postForm/PostForm.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","onClick","e","preventDefault","document","querySelector","classList","toggle","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","react_router_dom","to","Banner","src","logo","alt","type","Cards","state","cards","_this2","this","fetch","then","res","json","data","setState","filterByExpiration","catch","error","console","items","date","Date","day","getDate","month","getMonth","year","getFullYear","filter","item","_item$expirationDate$","expirationDate","split","map","_item$expirationDate$2","Object","slicedToArray","expMonth","expDay","expYear","cardList","length","card","key","id","style","backgroundImage","concat","backgroundURL","name","description","Component","PostForm","email","comment","handleChange","_ref","target","_this","defineProperty","value","handlerSubmit","log","method","body","JSON","stringify","headers","Content-Type","response","alert","props","history","push","scrollToBottom","el","scrollIntoView","behavior","_this$state","ref","onSubmit","placeholder","onChange","required","cols","rows","Footer","App","header_Header","banner_Banner","react_router","exact","path","component","footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d26f4e30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hotdog.4acd556c.svg\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    \r\n    return (<header className=\"header\">\r\n                <div className=\"img-banner\">\r\n                    <div className=\"img-banner__container\">\r\n                        <a href=\"#\" className=\"img-banner__link\">#hotdogs</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <a href=\"#\" className=\"burger-nav burger-nav_dark\" onClick={(e) => {\r\n                            e.preventDefault();\r\n                            document.querySelector('.menu').classList.toggle('active');\r\n                        }}>\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"bars\" className=\"svg-inline--fa fa-bars fa-w-14 burger-nav__icon\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"></path></svg>\r\n                    </a>\r\n                    <nav className=\"nav\">\r\n                        <ul className=\"menu\">\r\n                            <li className=\"menu__item\"><Link to=\"/\" className=\"menu__link\">Menu</Link></li>\r\n                            <li className=\"menu__item\"><Link to=\"/\" className=\"menu__link\">Catering</Link></li>\r\n                            <li className=\"menu__item\"><Link to=\"/\" className=\"menu__link\">About us</Link></li>\r\n                            <li className=\"menu__item\"><Link to=\"/contact\" className=\"menu__link\">Contact</Link></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport logo from '../../img/hotdog.svg';\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <section className=\"banner\">\r\n            <div className=\"container\">\r\n                <div className=\"banner__content\">\r\n                    <img src={logo} alt=\"hotdog\" className=\"banner__logo\"/>\r\n                    <h1 className=\"banner__title\">Dirty Dogs serves all-beef, vegan and vegatagian hot dogs.</h1>\r\n                    <button type=\"button\" className=\"banner__button button\">More Dogsâ€˜n Make Em Hot</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React, { Component } from 'react';\r\n\r\n\r\nclass Cards extends Component {\r\n\r\n    state = {\r\n        cards: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://formula-test-api.herokuapp.com/menu')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    cards: this.filterByExpiration(data)\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error('Error: ', error);\r\n            });\r\n    }\r\n\r\n    filterByExpiration(items) {\r\n        // change this function to return only current items\r\n        // where expirationDate > today's date\r\n        const date = new Date();\r\n        const day = date.getDate();\r\n        const month = date.getMonth() + 1;\r\n        const year = date.getFullYear();\r\n\r\n\r\n        items = items.filter(item => {\r\n            let [expMonth, expDay, expYear] = item.expirationDate.split('-').map(item => +item);\r\n\r\n            let isYearExt = expYear > year;\r\n            let isMonthExt = expYear === year && expMonth > month;\r\n            let isDayExt = expYear === year && expMonth === month && expDay > day;\r\n\r\n            return isYearExt || isMonthExt || isDayExt;\r\n        });\r\n\r\n        return items;\r\n    };\r\n\r\n    render() {\r\n        const { cards } = this.state;\r\n        const cardList = cards.length ? (\r\n            cards.map(card => {\r\n                return (\r\n        <div className=\"card\" key={card.id}>\r\n                        <div className=\"card__img\" style={{backgroundImage: `url(${card.backgroundURL})`}}></div>\r\n                        <div className=\"card__content\">\r\n                            <div className=\"container\">\r\n                                <h2 className=\"card__title\">{card.name}</h2>\r\n                                <p className=\"card__text\">{card.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <p className='alt_text'>There is no Dirty Dogs yet</p>\r\n        );\r\n    \r\n        return(\r\n            <section className='hod-dogs'>\r\n                {cardList}\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Cards;","import React, { Component } from 'react'\r\n\r\nclass PostForm extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        comment: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.el.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        this.setState({[target.name] : target.value});\r\n    }\r\n\r\n    handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        fetch('https://formula-test-api.herokuapp.com/contact', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n            alert('Success: ' + JSON.stringify(response));\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    render() {\r\n        const {name, email, comment} = this.state;\r\n        return (\r\n            <section className=\"contact\" ref={el => { this.el = el }}>\r\n                <div className='container'>\r\n                    <h1 className='contact__title'>Contact us</h1>\r\n                    <form onSubmit={this.handlerSubmit} className='form'>\r\n                        <div>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\" name='name' placeholder=\"Enter User name\" value={name} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div>\r\n                            <textarea name=\"comment\" className=\"form-control\" placeholder='Leave your comment'  cols=\"30\" rows=\"10\" value={comment} onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"form__button button\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostForm\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"wrapper\">\r\n                <p className=\"footer__text\">Â® 2016 Dirty Dogs all rights reserved</p>\r\n                <p className=\"footer__text\">\r\n                    <span className='text-section'>274 Marconi Blvd. Columbus, Ohio 43215</span>\r\n                    <span className='text-section'>614.538.0095</span> \r\n                    <span className='text-section'>Contact Us</span>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport Header from './components/header/Header';\r\nimport Banner from './components/banner/Banner';\r\nimport Cards from './components/cards/Cards';\r\nimport PostForm from './components/postForm/PostForm';\r\nimport Footer from './components/footer/Footer';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <main className='main'>\r\n            <Banner/>\r\n            <Route exact path='/' component ={Cards} />\r\n            <Route path='/contact' component ={PostForm}/>\r\n          </main>\r\n          <Footer/>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}